//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WindowsService.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEmailSend")]
    public interface IEmailSend {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailSend/SendEmail", ReplyAction="http://tempuri.org/IEmailSend/SendEmailResponse")]
        void SendEmail(string email, string emailPassword, string subject, string content, string targetEmail);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmailSend/SendEmail", ReplyAction="http://tempuri.org/IEmailSend/SendEmailResponse")]
        System.Threading.Tasks.Task SendEmailAsync(string email, string emailPassword, string subject, string content, string targetEmail);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmailSendChannel : WindowsService.ServiceReference1.IEmailSend, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmailSendClient : System.ServiceModel.ClientBase<WindowsService.ServiceReference1.IEmailSend>, WindowsService.ServiceReference1.IEmailSend {
        
        public EmailSendClient() {
        }
        
        public EmailSendClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmailSendClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailSendClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmailSendClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SendEmail(string email, string emailPassword, string subject, string content, string targetEmail) {
            base.Channel.SendEmail(email, emailPassword, subject, content, targetEmail);
        }
        
        public System.Threading.Tasks.Task SendEmailAsync(string email, string emailPassword, string subject, string content, string targetEmail) {
            return base.Channel.SendEmailAsync(email, emailPassword, subject, content, targetEmail);
        }
    }
}
